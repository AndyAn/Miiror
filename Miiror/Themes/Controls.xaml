<ResourceDictionary
    xmlns:local="clr-namespace:Miiror.Controls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Miiror;component/Themes/Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Metro Window -->
    
    <Style x:Key="MetroWindow" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Consolas, Microsoft YaHei"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  
                                   Stroke="#FF474747" Margin="0">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"  
                                BorderBrush="{TemplateBinding BorderBrush}"  
                                BorderThickness="{TemplateBinding BorderThickness}"  
                                Padding="0"  
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                                >
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox -->

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Width="10" Background="#454545" BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="360"/>
        <Setter Property="MinHeight" Value="95"/>
        <Setter Property="Template">
            <Setter.Value >
                <ControlTemplate>
                    <Border Name="PanelBorder" Background="#8CBF26" BorderThickness="0">
                        <ScrollViewer x:Name="scrollviewer" >
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}" >
                                    <DockPanel>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" DockPanel.Dock="Right"
                                                    Value="{TemplateBinding VerticalOffset}"
                                                    Maximum="{TemplateBinding ScrollableHeight}"
                                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                    Width="10" Margin="-4,0,-3,0">
                                            <ScrollBar.Template>
                                                <ControlTemplate>
                                                    <Border Background="Transparent" Width="10" >
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                                            </Track.Thumb>
                                                        </Track>
                                                    </Border>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>
                                        <ScrollContentPresenter HorizontalAlignment="Stretch" />
                                    </DockPanel>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter HorizontalAlignment="Stretch" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBoxItem -->

    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="MinHeight" Value="52"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource ListItemBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="ItemBorder" Background="{TemplateBinding Background}">
                        <Border Name="Border" Padding="4, 0, 4, 0" BorderBrush="Transparent" BorderThickness="5, 0, 0, 0" SnapsToDevicePixels="true">
                            <!--ContentPresenter VerticalAlignment="Center" /-->
                            <Canvas>
                                <StackPanel Canvas.Left="0">
                                    <TextBlock DockPanel.Dock="Left" Margin="5, 5, 0, 0" FontSize="20" Foreground="#FFF" Text="{Binding Path=Source}" />
                                    <TextBlock DockPanel.Dock="Bottom" Margin="15, 0, 0, 10" Foreground="#DDD">
                                        <Run>to </Run>
                                        <Run Text="{Binding Path=Target}" FontSize="16"></Run>
                                    </TextBlock>
                                </StackPanel>
                                <ProgressBar HorizontalAlignment="Stretch"/>
                                <TextBlock Canvas.Right="10" Margin="0 12 10 0" FontSize="20" Foreground="#FFF" Text="{Binding Path=WorkingDisplay}" />
                            </Canvas>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ListItemSelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource ListItemHighLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsWorking}" Value="false">
                <Setter Property="Background" Value="{StaticResource ListItemStopMonitorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Button -->
    
    <Style TargetType="{x:Type local:ButtonExt}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ButtonExt}">
                    <Canvas Name="btnBG" Background="{TemplateBinding Background}">
                        <TextBlock FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Background="Transparent"
                                   Foreground="{TemplateBinding Foreground}"
                                   Padding="{TemplateBinding Padding}"
                                   Width="{TemplateBinding Width}"
                                   Height="{TemplateBinding Height}"
                                   Text="{TemplateBinding Content}" />
                        <Image Source="{TemplateBinding ImageSource}" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="btnBG" Property="Background" Value="#F11515" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="btnBG" Property="Background" Value="#F11515" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Accept Button -->

    <Style x:Key="AcceptButton" TargetType="{x:Type local:ButtonExt}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ButtonExt}">
                    <Canvas Name="btnBG" Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Label Name="txt"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               FontWeight="ExtraBold"
                               Background="Transparent"
                               Foreground="#959595"
                               HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               Padding="{TemplateBinding Padding}"
                               MaxWidth="{Binding ElementName=btnBG, Path=ActualWidth}"
                               Width="{Binding ElementName=btnBG, Path=ActualWidth}"
                               Height="{Binding ElementName=btnBG, Path=ActualHeight}">
                            <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" />
                        </Label>
                        <Image Source="{TemplateBinding ImageSource}" />
                        <Rectangle Name="btnBorder" Canvas.Top="0"
                                   Width="{Binding ElementName=btnBG, Path=ActualWidth}"
                                   Height="{Binding ElementName=btnBG, Path=ActualHeight}"
                                   RadiusX="10"
                                   RadiusY="10"
                                   StrokeThickness="5" 
                                   StrokeDashArray="3,1" 
                                   Stroke="#555555" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="btnBorder" Property="Stroke" Value="#959595" />
                            <!--<Setter TargetName="txt" Property="Foreground" Value="#959595" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="btnBorder" Property="Stroke" Value="#959595" />
                            <!--<Setter TargetName="txt" Property="Foreground" Value="#959595" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MessageBox Button -->

    <Style x:Key="MessageBoxButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="96" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Margin" Value="8 0 8 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas Name="btnBG" Background="#555" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Label Name="txt"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               Background="Transparent"
                               Foreground="#FFF"
                               HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               Padding="{TemplateBinding Padding}"
                               MaxWidth="{Binding ElementName=btnBG, Path=ActualWidth}"
                               Width="{Binding ElementName=btnBG, Path=ActualWidth}"
                               Height="{Binding ElementName=btnBG, Path=ActualHeight}">
                            <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" />
                        </Label>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="btnBG" Property="Background" Value="#F11515" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="btnBG" Property="Background" Value="#F11515" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox -->
    
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Grid Height="20" Width="20">
                            <Image x:Name="imageNoChecked" Source="/Miiror;component/Resources/uncheck.png" Height="32" Width="32"  Margin="-12" />
                            <Image x:Name="imageChecked" Source="/Miiror;component/Resources/check.png" Height="32" Width="32" Margin="-12" />
                        </Grid>
                        <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                    </StackPanel>

                    <ControlTemplate.Triggers >
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                            <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- StartUp CheckBox -->

    <Style x:Key="StartupCheckBox"  TargetType="{x:Type CheckBox}">
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Canvas Name="chkBG" Background="{TemplateBinding Background}">
                        <TextBlock Name="chkbox" FontFamily="Wingdings" FontSize="18"
                                Background="Transparent" Foreground="#FFF"
                                Padding="{TemplateBinding Padding}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Text="{TemplateBinding Content}"
                                ToolTip="{TemplateBinding ToolTip}"/>
                    </Canvas>
                    <ControlTemplate.Triggers >
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="chkbox" Property="Foreground" Value="#1BA1E2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="chkBG" Property="Background" Value="#F11515" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="chkBG" Property="Background" Value="#F11515" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RadioButton -->

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <StackPanel Orientation="Horizontal">
                        <Grid Height="20" Width="20">
                            <Image x:Name="imageNoChecked" Source="/Miiror;component/Resources/radiouncheck.png" Height="32" Width="32"  Margin="-12" />
                            <Image x:Name="imageChecked" Source="/Miiror;component/Resources/radiocheck.png" Height="32" Width="32" Margin="-12" />
                        </Grid>
                        <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                    </StackPanel>

                    <ControlTemplate.Triggers >
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                            <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Progress Bar -->

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border BorderBrush="Transparent" BorderThickness="0">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" Name="PART_Track" />
                            <Rectangle Fill="{TemplateBinding Foreground}" Name="PART_Indicator" HorizontalAlignment="Left"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
